library(neuralnet)
maxs <- apply(df,MARGIN = 2,max)
mins <- apply(df,2,min)
df.scaled <- scale(df,center = mins,scale = maxs-mins)
df.scaled <- as.data.frame(df.scaled)

library(caTools)
split <- sample.split(df.scaled$medv,SplitRatio = 0.7)
train <- subset(df.scaled, split == T)
test <- subset(df.scaled, split == F)
n <- names(train)
f <- as.formula(paste('medv~',paste(n[!n %in% 'medv'],collapse="+")))
nn <- neuralnet(f, data = train, hidden = c(5,3),linear.output = T)
plot(nn)
predicted.values <-compute(nn,test[1:13])
error.df <- data.frame(test.r,true.pred)
ggplot(error.df,aes(test.r,true.pred))+geom_point()+ stat_smooth()
