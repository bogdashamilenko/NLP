library(neuralnet)
library(ISLR)
library(dplyr)
library(caTools)
library(ggplot2)
library(randomForest)
library(tree)
library(gbm)
library(plotly)
library(caret)
library(e1071)

df <- read.csv('bank_note_data.csv')
df$fac.skew <- cut(df$Image.Skew, breaks = seq(-14,13,3))
df$Class<- as.factor(df$Class)
pl1 <- ggplot(df,aes(fac.skew)) +stat_count(aes(fill=Class))

proportion <- df %>% dplyr::group_by(fac.skew,Class) %>% tally() %>% dplyr::group_by(fac.skew) %>% dplyr::mutate( kolichestvo = round(n/sum(n),2))
proportion$sting <- paste0(proportion$kolichestvo*100, '%')
pl2 <- ggplot(proportion,aes(x =fac.skew,y = n,  fill=Class))+
              geom_histogram(stat = 'identity',position=position_dodge(0.8),alpha=0.9,barwidth=0.75)+  
              labs(title = "Distribution of fake bills by image skew", 
                   subtitle = "With the grow of image skew there is a bigger chance to receive a fake bill, so in case \nthe value is >4, it is a probability of 71% that it is fake.",
                   caption = "Source: Owner of database: Volker Lohweg (University of Applied Sciences, \nOstwestfalen-Lippe, volker.lohweg '@' hs-owl.de) \nDate received: August, 2012  ") +
              scale_fill_manual(values = c('#212F3C','#F1C40F')) +
              theme_bw()+ 
              geom_text(aes(label=proportion$sting),position = position_dodge(0.8), 
                        color='#A93226', vjust= -0.8)+
              theme(axis.title = element_blank(),legend.background = element_blank(),
                    legend.position = c(1,1),legend.justification = c(1.2,1),plot.title = element_text(size = 20),
                    plot.subtitle = element_text(size = 12, color = "darkslategrey"),
                    plot.caption = element_text(size = 8, color = "grey70", hjust = 0))+
              scale_y_continuous(breaks = seq(0,200,40))
#ggsave("plot.png")
#Normalizing our data
maxs <- apply(df[1:4],2,max)
mins <- apply(df[1:4],2,min)
scaled.df <- scale(df[1:4],center = mins,scale= maxs-mins)
scaled.df <- as.data.frame(scaled.df)
#After we scaled data I found out that in classification problem we do not do this, so let`s proceed with our df
df$fac.skew <- NULL
n <- names(df)
f <- as.formula(paste('Class ~' , paste(n[!n %in% 'Class'],collapse = '+')))
nn <- neuralnet(f,train,linear.output= F, hidden = 10 )
predicted <- neuralnet::compute(nn, test[,1:4])
final.pred <- apply(predicted$net.result,1,round)
table(final.pred,test$Class)
